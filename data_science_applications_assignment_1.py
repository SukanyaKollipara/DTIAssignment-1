# -*- coding: utf-8 -*-
"""Data Science Applications_Assignment-1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mmjJy6RLGwj_zkaAqVemD-N_FbGiIGqz
"""

import re

def is_strechy(words , S):
    count=0
    regexp=""
    for i in words:
        k = re.findall(r"((.)\2*)", i)
        regexp = "^"
        for j in k:
            regexp += "("+j[1]+"{3,}|"+j[0]+")"
        regexp += "$"
        if(re.search(regexp,S)):
            count +=1
    return count

words = ["hello", "hi", "helo","helloo"]
S = "heeellooo"
print(is_strechy(words, S))

"""In this code I defined a function called "is_strechy" that takes in two inputs: a list of strings called "words" and a string called "S". The function uses regular expressions to search for a match between the string "S" and any of the strings in the "words" list.

First, the function initializes a count variable to 0 and an empty string called regexp. Then, it loops through each string in the "words" list. For each string, it uses the re.findall() function with a regular expression to find all repeated characters in the string (i.e. (.)\2*). It then builds a new regular expression by concatenating the repeated characters with the "|" operator to account for strings of 3 or more characters, and the "^" and "$" characters to anchor the regular expression to the beginning and end of the string, respectively.

The function then uses the re.search() function to search for a match between the newly created regular expression and the string "S". If a match is found, the count variable is incremented. Finally, the function returns the final count.


"""